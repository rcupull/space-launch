{"version":3,"sources":["reducers/root_reducer.tsx","utils/definitions.tsx","presentational/spinner.tsx","presentational/header.tsx","presentational/navbar.tsx","presentational/launch_basics.tsx","presentational/pagination.tsx","reducers/actions.tsx","utils/api.tsx","presentational/list_launches.tsx","presentational/launch_details.tsx","presentational/layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["def_RootReducerState","fetching","error","updated","count","offset","launches","routes","MySpinner","css","size","color","connect","state","ownProps","active","Modal","show","centered","dialogAs","style_div","backgroundColor","textAlign","style_text","fontSize","padding","Header","style","MenuItems","text","route","NavBar","Navbar","bg","variant","Toggle","aria-controls","Collapse","id","Nav","className","map","item","Link","key","as","NavLink","to","activeClassName","renderItem","LaunchBasics","launch","Card","margin","Body","Title","name","Text","rocket","configuration","launch_service_provider","float","style_button","LocalMapDispatchToProps","set_offset","type","useState","next_disabled","set_next_disabled","prev_disabled","set_prev_disabled","current_count","set_current_count","useEffect","Row","Button","disabled","onClick","Math","ceil","handle_fetch_launches","dispatch","getState","config","method","url","api_server","params","format","limit","axios","then","res","data","results","catch","length","handle_fetch_launch_details","launch_details","redirect","set_redirect","useParams","height","Col","sm","position","width","top","left","full_name","country_code","family","description","href","slug","Layout","Container","exact","path","component","ListLaunches","LaunchDetails","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.7167140b.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\r\n// import { SessionReducer, SessionState } from \"./session_reducer\";\r\nimport { ILaunch, ILaunch_details } from \"../utils/definitions\";\r\nimport { OwnAction } from \"./actions\";\r\n\r\nexport interface RootReducerState {\r\n  fetching: boolean;\r\n  error: boolean;\r\n  updated: boolean;\r\n  count: number;\r\n  offset: number;\r\n  launches: ILaunch[];\r\n\r\n  launch_details?: ILaunch_details;\r\n}\r\nconst def_RootReducerState: RootReducerState = {\r\n  fetching: false,\r\n  error: false,\r\n  updated: false,\r\n\r\n  count: 0,\r\n  offset: 0,\r\n\r\n  launches: [],\r\n};\r\n\r\nexport const RootReducer: Reducer<RootReducerState, OwnAction> = (\r\n  state = def_RootReducerState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"FETCHING\":\r\n      return { ...state, fetching: true };\r\n    case \"ERROR\":\r\n      return { ...state, error: true };\r\n    case \"SUCCESS_FETCH_LAUNCHES\":\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        fetching: false,\r\n        updated: true,\r\n        launches: action.launches,\r\n      };\r\n    case \"SET_OFFSET\":\r\n      return { ...state, updated: false, offset: action.offset };\r\n    case \"SET_COUNT\":\r\n      return { ...state, count: action.count };\r\n    case \"SUCCESS_FETCH_LAUNCH_DETAILS\":\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        fetching: false,\r\n        updated: true,\r\n        launch_details: action.launch,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","///////////////////////////////////////////////////////\r\n\r\nexport interface ILaunch {\r\n  id: string;\r\n  name: string;\r\n  image_url: string;\r\n\r\n  rocket: {\r\n    configuration: {\r\n      name: string;\r\n      launch_service_provider: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ILaunch_details {\r\n  id: string;\r\n  name: string;\r\n  image_url: string;\r\n  slug: string;\r\n  rocket: {\r\n    configuration: {\r\n      name: string;\r\n      description: string;\r\n      family: string;\r\n      full_name: string;\r\n      launch_service_provider: {\r\n        name: string;\r\n        country_code: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport const routes = {\r\n  launches: \"/launches\",\r\n};\r\n","import React from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { MapDispatchToProps, MapStateToProps, connect } from \"react-redux\";\r\nimport { RootReducerState } from \"../reducers/root_reducer\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Modal } from \"react-bootstrap\";\r\nconst MySpinner: React.SFC = () => {\r\n  const size: number = 100;\r\n  return (\r\n    <ClipLoader\r\n      css={css`\r\n        position: absolute;\r\n        top: calc(50% - ${size / 2}px);\r\n        left: calc(50% - ${size / 2}px);\r\n        z-index: 100;\r\n      `}\r\n      size={size}\r\n      color={\"black\"}\r\n    />\r\n  );\r\n};\r\n////////////////////////////////////////////\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n  active: boolean;\r\n}\r\ninterface DispatchProps {}\r\n///////////////////////////////////////////\r\ntype SpinnerProps = OwnProps & StateProps & DispatchProps;\r\nconst Spinner: React.SFC<SpinnerProps> = ({ active }) => {\r\n  return <Modal show={active} centered dialogAs={MySpinner} />;\r\n};\r\n\r\nconst LocalMapStateToProps: MapStateToProps<\r\n  StateProps,\r\n  OwnProps,\r\n  RootReducerState\r\n> = (state, ownProps) => {\r\n  return {\r\n    active: state.fetching,\r\n  };\r\n};\r\nconst LocalMapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = {};\r\n\r\nexport default connect(LocalMapStateToProps, LocalMapDispatchToProps)(Spinner);\r\n","import React from \"react\";\r\n\r\nconst style_div: React.CSSProperties = {\r\n  backgroundColor: \"gray\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst style_text: React.CSSProperties = {\r\n  color: \"#212529\",\r\n  fontSize: \"4rem\",\r\n  padding: \"2rem 0\",\r\n};\r\n\r\nexport interface HeaderProps {}\r\nconst Header: React.SFC<HeaderProps> = () => {\r\n  return (\r\n    <div style={style_div}>\r\n      <div style={style_text}>Space Launches Now</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"../utils/definitions\";\r\ninterface IMenuItem {\r\n  text: string;\r\n  route: string;\r\n}\r\nconst MenuItems: IMenuItem[] = [{ text: \"Launches\", route: routes.launches }];\r\nexport interface NavBarProps {}\r\n\r\nconst NavBar: React.SFC<NavBarProps> = () => {\r\n  const renderItem = (id: number, item: IMenuItem) => {\r\n    return (\r\n      <Nav.Link\r\n        key={id}\r\n        as={NavLink}\r\n        to={item.route}\r\n        className=\"menu_items1 menu_items1_normal\"\r\n        activeClassName=\"menu_items1 menu_items1_active\"\r\n      >\r\n        {item.text}\r\n      </Nav.Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {MenuItems.map((item, id) => renderItem(id, item))}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { ILaunch } from \"../utils/definitions\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"../utils/definitions\";\r\n\r\nexport interface LaunchBasicsProps {\r\n  launch: ILaunch;\r\n}\r\n\r\nconst LaunchBasics: React.SFC<LaunchBasicsProps> = ({ launch }) => {\r\n  return (\r\n    <Card style={{ margin: \"1rem 0\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{launch.name}</Card.Title>\r\n        <Card.Text>\r\n          <b>Rocket:</b> {launch.rocket.configuration.name}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Service provider:</b>\r\n          {launch.rocket.configuration.launch_service_provider}\r\n        </Card.Text>\r\n\r\n        <NavLink\r\n          style={{ float: \"right\" }}\r\n          to={`${routes.launches}/${launch.id}`}\r\n        >\r\n          Details\r\n        </NavLink>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LaunchBasics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Button } from \"react-bootstrap\";\r\nimport { MapDispatchToProps, MapStateToProps, connect } from \"react-redux\";\r\nimport { RootReducerState } from \"../reducers/root_reducer\";\r\nimport * as actions from \"../reducers/actions\";\r\nimport { launches_for_pages } from \"../utils/api\";\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n  count: number;\r\n  offset: number;\r\n  updated: boolean;\r\n}\r\ninterface DispatchProps {\r\n  set_offset: (offset: number) => void;\r\n}\r\n\r\ntype PaginationProps = OwnProps & StateProps & DispatchProps;\r\n\r\nconst style_button: React.CSSProperties = {\r\n  padding: \"1rem\",\r\n  fontSize: \"1.5rem\",\r\n};\r\n\r\nconst Pagination: React.SFC<PaginationProps> = ({\r\n  count,\r\n  offset,\r\n  updated,\r\n  set_offset,\r\n}) => {\r\n  const [next_disabled, set_next_disabled] = useState<boolean>(true);\r\n  const [prev_disabled, set_prev_disabled] = useState<boolean>(false);\r\n  const [current_count, set_current_count] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    if (updated) {\r\n      set_next_disabled(offset === 0);\r\n      set_prev_disabled(offset > count - launches_for_pages);\r\n      set_current_count(offset / launches_for_pages + 1);\r\n    }\r\n  }, [updated]);\r\n\r\n  const handle_next_pagination = () => {\r\n    set_offset(offset + launches_for_pages);\r\n  };\r\n\r\n  const handle_previous_pagination = () => {\r\n    set_offset(offset - launches_for_pages);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Button\r\n        disabled={next_disabled}\r\n        style={style_button}\r\n        onClick={() => {\r\n          handle_previous_pagination();\r\n        }}\r\n        variant=\"link\"\r\n      >\r\n        {\"<< Prev\"}\r\n      </Button>\r\n\r\n      <div style={style_button}>\r\n        {`Pages ${current_count} / ${Math.ceil(count / launches_for_pages)}`}\r\n      </div>\r\n      <Button\r\n        disabled={prev_disabled}\r\n        style={style_button}\r\n        onClick={() => {\r\n          handle_next_pagination();\r\n        }}\r\n        variant=\"link\"\r\n      >\r\n        {\"Next >>\"}\r\n      </Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LocalMapStateToProps: MapStateToProps<\r\n  StateProps,\r\n  OwnProps,\r\n  RootReducerState\r\n> = (state, ownProps) => {\r\n  return {\r\n    count: state.count,\r\n    offset: state.offset,\r\n    updated: state.updated,\r\n  };\r\n};\r\nconst LocalMapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = {\r\n  set_offset: actions.A_set_offset,\r\n};\r\n\r\nexport default connect(\r\n  LocalMapStateToProps,\r\n  LocalMapDispatchToProps\r\n)(Pagination);\r\n","import { ILaunch, ILaunch_details } from \"../utils/definitions\";\r\nimport { RootReducerState } from \"./root_reducer\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport axios, { AxiosRequestConfig } from \"axios\";\r\nimport {\r\n  url_launcher,\r\n  url_launch_details,\r\n  launches_for_pages,\r\n} from \"../utils/api\";\r\n\r\nexport type OwnAction =\r\n  | { type: \"FETCHING\" }\r\n  | { type: \"ERROR\" }\r\n  | { type: \"SUCCESS_FETCH_LAUNCHES\"; launches: ILaunch[] }\r\n  | { type: \"SUCCESS_FETCH_LAUNCH_DETAILS\"; launch: ILaunch_details }\r\n  | { type: \"SET_OFFSET\"; offset: number }\r\n  | { type: \"SET_COUNT\"; count: number };\r\n\r\nconst A_fetching = (): OwnAction => {\r\n  return { type: \"FETCHING\" };\r\n};\r\nconst A_error = (): OwnAction => {\r\n  return { type: \"ERROR\" };\r\n};\r\nconst A_fetch_launches = (launches: ILaunch[]): OwnAction => {\r\n  return { type: \"SUCCESS_FETCH_LAUNCHES\", launches: launches };\r\n};\r\nconst A_fetch_launch_details = (launch: ILaunch_details): OwnAction => {\r\n  return { type: \"SUCCESS_FETCH_LAUNCH_DETAILS\", launch: launch };\r\n};\r\nexport const A_set_offset = (offset: number): OwnAction => {\r\n  return { type: \"SET_OFFSET\", offset: offset };\r\n};\r\nconst A_set_count = (count: number): OwnAction => {\r\n  return { type: \"SET_COUNT\", count: count };\r\n};\r\n\r\ntype ThunkResult<R> = ThunkAction<R, RootReducerState, undefined, OwnAction>;\r\n\r\nexport const A_fetch_launches_thunk = (): ThunkResult<void> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(A_fetching());\r\n    const error = () => {\r\n      dispatch(A_error());\r\n    };\r\n    const success = (res: any) => {\r\n      dispatch(A_set_count(res.data.count));\r\n\r\n      dispatch(A_fetch_launches(res.data.results));\r\n    };\r\n\r\n    let config: AxiosRequestConfig = {\r\n      method: \"get\",\r\n      url: url_launcher,\r\n      params: {\r\n        format: \"json\",\r\n        limit: launches_for_pages,\r\n        offset: getState().offset,\r\n      },\r\n    };\r\n    axios(config).then(success).catch(error);\r\n  };\r\n};\r\n\r\nexport const A_fetch_launch_details_thunk = (id: string): ThunkResult<void> => {\r\n  return (dispatch) => {\r\n    dispatch(A_fetching());\r\n    const error = () => {\r\n      dispatch(A_error());\r\n    };\r\n    const success = (res: any) => {\r\n      dispatch(A_fetch_launch_details(res.data));\r\n    };\r\n\r\n    let config: AxiosRequestConfig = {\r\n      method: \"get\",\r\n      url: `${url_launch_details}/${id}`,\r\n      params: {\r\n        format: \"json\",\r\n      },\r\n    };\r\n    axios(config).then(success).catch(error);\r\n  };\r\n};\r\n","export const launches_for_pages: number = 10;\r\n\r\nexport const api_server = \"https://spacelaunchnow.me/api/3.3.0\";\r\n\r\nexport const url_launcher = api_server + \"/launch/upcoming\";\r\nexport const url_launch_details = api_server + \"/launch\";\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { MapDispatchToProps, MapStateToProps, connect } from \"react-redux\";\r\nimport { RootReducerState } from \"../reducers/root_reducer\";\r\nimport { ILaunch } from \"../utils/definitions\";\r\nimport LaunchBasics from \"./launch_basics\";\r\nimport * as actions from \"../reducers/actions\";\r\nimport Pagination from \"./pagination\";\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n  launches: ILaunch[];\r\n  updated: boolean;\r\n  fetching: boolean;\r\n}\r\ninterface DispatchProps {\r\n  handle_fetch_launches: () => void;\r\n}\r\n\r\ntype ListLaunchesProps = OwnProps & StateProps & DispatchProps;\r\n\r\nconst ListLaunches: React.SFC<ListLaunchesProps> = ({\r\n  launches,\r\n  updated,\r\n  fetching,\r\n  handle_fetch_launches,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!updated) handle_fetch_launches();\r\n    if (!launches.length) handle_fetch_launches();\r\n  }, [updated, launches]);\r\n\r\n  if (fetching) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      {launches.map((launch, id) => (\r\n        <LaunchBasics key={id} launch={launch} />\r\n      ))}\r\n\r\n      <Pagination />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst LocalMapStateToProps: MapStateToProps<\r\n  StateProps,\r\n  OwnProps,\r\n  RootReducerState\r\n> = (state, ownProps) => {\r\n  return {\r\n    launches: state.launches,\r\n    updated: state.updated,\r\n    fetching: state.fetching,\r\n  };\r\n};\r\nconst LocalMapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = {\r\n  handle_fetch_launches: actions.A_fetch_launches_thunk,\r\n};\r\n\r\nexport default connect(\r\n  LocalMapStateToProps,\r\n  LocalMapDispatchToProps\r\n)(ListLaunches);\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { MapDispatchToProps, MapStateToProps, connect } from \"react-redux\";\r\nimport { RootReducerState } from \"../reducers/root_reducer\";\r\nimport * as actions from \"../reducers/actions\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { ILaunch_details, routes } from \"../utils/definitions\";\r\n\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n  launch_details?: ILaunch_details;\r\n}\r\ninterface DispatchProps {\r\n  handle_fetch_launch_details: (id: string) => void;\r\n}\r\n\r\ntype LaunchDetailsProps = OwnProps & StateProps & DispatchProps;\r\n\r\nconst size_col_1 = 3;\r\nconst size_col_2 = 12 - size_col_1;\r\n\r\nconst size_col_3 = 2;\r\nconst size_col_4 = 12 - size_col_3;\r\n\r\nconst LaunchDetails: React.SFC<LaunchDetailsProps> = ({\r\n  launch_details,\r\n  handle_fetch_launch_details,\r\n}) => {\r\n  const [redirect, set_redirect] = useState<boolean>(false);\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    handle_fetch_launch_details(id);\r\n  }, [id]);\r\n\r\n  if (typeof launch_details === \"undefined\") return null;\r\n  if (redirect) return <Redirect to={routes.launches} />;\r\n\r\n  const handle_render_image = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundColor: \"gray\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: \"3rem\",\r\n            position: \"absolute\",\r\n            top: \"40%\",\r\n            left: \"8%\",\r\n          }}\r\n        >\r\n          No image\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ margin: \"2rem 0\", padding: \"1rem\" }}>\r\n        <Row style={{ height: \"20 rem\" }}>\r\n          <Col sm={size_col_1}>{handle_render_image()}</Col>\r\n          <Col sm={size_col_2}>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col>\r\n                  <Card.Title\r\n                    style={{\r\n                      fontSize: \"2.5rem\",\r\n                      textAlign: \"left\",\r\n                      padding: \"1rem 0\",\r\n                    }}\r\n                  >\r\n                    {launch_details.name}\r\n                  </Card.Title>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={size_col_3}>\r\n                  <Card.Title\r\n                    style={{ textAlign: \"right\", fontSize: \"1.5rem\" }}\r\n                  >\r\n                    Rocket\r\n                  </Card.Title>\r\n                </Col>\r\n                <Col sm={size_col_4}>\r\n                  <Card.Text>\r\n                    <b>Name: </b> {launch_details.rocket.configuration.name}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <b>Full name: </b>\r\n                    {launch_details.rocket.configuration.full_name}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <b>Provider: </b>\r\n                    {\r\n                      launch_details.rocket.configuration\r\n                        .launch_service_provider.name\r\n                    }\r\n                    .\r\n                    {\r\n                      launch_details.rocket.configuration\r\n                        .launch_service_provider.country_code\r\n                    }\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <b>Family: </b>\r\n                    {launch_details.rocket.configuration.family}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <b>Description: </b>\r\n                    {launch_details.rocket.configuration.description}\r\n                  </Card.Text>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <b>View more details in: </b>\r\n                <a href={launch_details.slug} style={{}}>\r\n                  {launch_details.slug}\r\n                </a>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n\r\n      <div style={{ textAlign: \"right\", margin: \"2rem 0\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            set_redirect(true);\r\n          }}\r\n          variant=\"secondary\"\r\n        >\r\n          Back\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst LocalMapStateToProps: MapStateToProps<\r\n  StateProps,\r\n  OwnProps,\r\n  RootReducerState\r\n> = (state, ownProps) => {\r\n  return {\r\n    launch_details: state.launch_details,\r\n  };\r\n};\r\nconst LocalMapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = {\r\n  handle_fetch_launch_details: actions.A_fetch_launch_details_thunk,\r\n};\r\n\r\nexport default connect(\r\n  LocalMapStateToProps,\r\n  LocalMapDispatchToProps\r\n)(LaunchDetails);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter,\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { routes } from \"../utils/definitions\";\r\nimport Spinner from \"./spinner\";\r\nimport Header from \"./header\";\r\nimport NavBar from \"./navbar\";\r\nimport ListLaunches from \"./list_launches\";\r\nimport LaunchDetails from \"./launch_details\";\r\n\r\nexport interface LayoutProps {}\r\n\r\nconst Layout: React.SFC<LayoutProps> = () => {\r\n  return (\r\n    <Container>\r\n      <HashRouter>\r\n        <Spinner />\r\n        <Header />\r\n        <NavBar />\r\n\r\n        <Switch>\r\n          <Route exact path={routes.launches} component={ListLaunches} />\r\n          <Route path={`${routes.launches}/:id`} component={LaunchDetails} />\r\n          <Redirect to={routes.launches} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\nimport { RootReducer } from \"./reducers/root_reducer\";\nimport { OwnAction } from \"./reducers/actions\";\nimport { RootReducerState } from \"./reducers/root_reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport Layout from \"./presentational/layout\";\n\n// const store = createStore(\n//   RootReducer,\n//   applyMiddleware(thunk as ThunkMiddleware<RootReducerState, OwnAction>)\n// );\nconst store = createStore(\n  RootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk as ThunkMiddleware<RootReducerState, OwnAction>)\n  )\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Layout />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}